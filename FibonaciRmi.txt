package Fibonacci;
import java.rmi.Remote;
import java.rmi.RemoteException;
public interface PrintI extends Remote {
    void generateFibonacci() throws RemoteException;
}


package Fibonacci;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.util.Scanner;
public class PrintC extends UnicastRemoteObject implements PrintI {
    public PrintC() throws RemoteException {
        super();
    }
    public void generateFibonacci() {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the number of terms for Fibonacci series : ");
        int n = sc.nextInt();
        if (n <= 0) {
            System.out.println("Invalid input! Please enter a positive number.");
            return;
        }
        System.out.println("Fibonacci Series :");
        long a = 0, b = 1;
        for (int i = 1; i <= n; i++) {
            System.out.print(a + " ");
            long next = a + b;
            a = b;
            b = next;
        }
        System.out.println();
    }
}


package Fibonacci;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
public class Server {
    public static void main(String[] args) {
        try {
            Registry registry = LocateRegistry.createRegistry(4000);
            PrintC obj = new PrintC();
            registry.bind("FIBONACCI", obj);
            System.out.println("Server started successfully!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}


package Fibonacci;
import java.rmi.Naming;
import java.rmi.RemoteException;   
import java.net.MalformedURLException; 
import java.rmi.NotBoundException;
public class Client {
    public static void main(String[] args) throws MalformedURLException, RemoteException, NotBoundException {
            PrintI iobj = (PrintI)Naming.lookup("rmi://localhost:4000/FIBONACCI");
            iobj.generateFibonacci();
    }
}
